# The following info parameters are being referenced by ajsc6
info.build.artifact=aai-resources
info.build.name=resources
info.build.description=Resources Microservice
info.build.version=1.1.0

spring.application.name=Resources Microservice
spring.jersey.type=filter
spring.main.allow-bean-definition-overriding=true

server.servlet.context-path=/
spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
  org.keycloak.adapters.springboot.KeycloakAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\
  org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

spring.jersey.application-path=${schema.uri.base.path}

spring.profiles.active=production
#The max number of active threads in this pool
jetty.threadPool.maxThreads=200
#The minimum number of threads always kept alive
jetty.threadPool.minThreads=8
#The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads
server.tomcat.max-idle-time=60000

# If you get an application startup failure that the port is already taken
# If thats not it, please check if the key-store file path makes sense
server.local.startpath=/opt/aai-resources/resources
server.basic.auth.location=${server.local.startpath}/etc/auth/realm.properties
server.certs.location=${server.local.startpath}etc/auth/
#server.keystore.name=keystore.jks
server.keystore.name=aai_keystore
server.truststore.name=aai_keystore
server.port=8447
server.ssl.enabled-protocols=TLSv1.1,TLSv1.2
server.ssl.key-store=${server.certs.location}${server.keystore.name}
server.ssl.key-store-password=password(OBF:1vn21ugu1saj1v9i1v941sar1ugw1vo0)
server.ssl.trust-store=${server.certs.location}${server.truststore.name}
server.ssl.trust-store-password=password(OBF:1vn21ugu1saj1v9i1v941sar1ugw1vo0)
server.ssl.client-auth=want
server.ssl.key-store-type=JKS

null.db.serialization.enabled=true

# JMS bind address host port
jms.bind.address=tcp://localhost:61647

dmaap.ribbon.listOfServers=localhost:3904

# Schema related attributes for the oxm and edges
# Any additional schema related attributes should start with prefix schema
schema.configuration.location=N/A
schema.source.name=onap
schema.nodes.location=${server.local.startpath}/schema/${schema.source.name}/oxm/
schema.edges.location=${server.local.startpath}/schema/${schema.source.name}/dbedgerules/

schema.ingest.file=${server.local.startpath}/application.properties

# Schema Version Related Attributes

schema.uri.base.path=/aai
# Lists all of the versions in the schema
schema.version.list=v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24
# Specifies from which version should the depth parameter to default to zero
schema.version.depth.start=v10
# Specifies from which version should the related link be displayed in response payload
schema.version.related.link.start=v10
# Specifies from which version should the client see only the uri excluding host info
# Before this version server base will also be included
schema.version.app.root.start=v11
# Specifies from which version should the namespace be changed
schema.version.namespace.change.start=v12
# Specifies from which version should the client start seeing the edge label in payload
schema.version.edge.label.start=v12
# Specifies the version that the application should default to
schema.version.api.default=v24


#schema.translator.list=schema-service
schema.translator.list=config
schema.service.base.url=https://localhost:8452/aai/schema-service/v1/
schema.service.nodes.endpoint=nodes?version=
schema.service.edges.endpoint=edgerules?version=
schema.service.versions.endpoint=versions

schema.service.ssl.key-store=${server.certs.location}${server.keystore.name}
schema.service.ssl.trust-store=${server.certs.location}${server.truststore.name}
schema.service.ssl.key-store-password=password(OBF:1vn21ugu1saj1v9i1v941sar1ugw1vo0)
schema.service.ssl.trust-store-password=password(OBF:1vn21ugu1saj1v9i1v941sar1ugw1vo0)
schema.service.versions.override=false

#To Expose the Prometheus scraping endpoint
management.server.port=8448
#To Enable Actuator Endpoint, you can override this to True in OOM charts
management.endpoints.enabled-by-default=true
#To Enable Actuator Endpoint, you can override this in OOM Charts
management.endpoints.web.exposure.include=info, health, prometheus
management.metrics.web.server.auto-time-requests=false
management.metrics.tags.group_id=aai
# management.metrics.tags.app_id=${info.build.artifact}
# management.metrics.tags.aai_uri=${schema.uri.base.path}
#It is not advisable to use labels to store dimensions with high cardinality.
#Enable this option only for debug purposes. For more information: https://github.com/micrometer-metrics/micrometer/issues/1584
scrape.uri.metrics=false

# Location of the cadi properties file should be specified here
aaf.cadi.file=${server.local.startpath}/cadi.properties

delta.events.enabled=false

# Specifies what type of request should it be: one-way-ssl, two-way-ssl, no-auth
validation.service.client=one-way-ssl
# Base url for the validation service
validation.service.base.url=https://localhost:9501/services/validation-service
# Client certificate to use to make the request to validation
validation.service.ssl.key-store=${server.local.startpath}/etc/auth/aai-client-cert.p12
# Truststore to use to make the request to validation
validation.service.ssl.trust-store=${server.local.startpath}/etc/auth/tomcat_keystore
# Client certificate password for the validation
validation.service.ssl.key-store-password=password(OBF:1vn21ugu1saj1v9i1v941sar1ugw1vo0)
# Truststore password for the validation
validation.service.ssl.trust-store-password=password(OBF:1vn21ugu1saj1v9i1v941sar1ugw1vo0)
# Amount of time that the client should wait in milliseconds before request failing
validation.service.timeout-in-milliseconds=3000
# List of aai node types that should be send to the validation microservice
validation.service.node-types=generic-vnf,lag-interface,l-interface,logical-link,newvce,nos-server,p-interface,pnf,pserver,vce,vlan,vnfc,vpls-pe,vserver
# List of X-FromAppId regexes seperated by comma to ignore the pre validation for
# Note: please don't add any client id here as this is only for testing tools such as robot
validation.service.exclusion-regexes=
